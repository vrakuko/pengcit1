syntax = "proto3";

package raft;

option java_multiple_files = true;
option java_package = "raft.proto";
option java_outer_classname = "RaftProto";

// Shared Address message
message AddressMsg {
    string host = 1;
    int32 port = 2;
}

// Log Entry message
message LogEntryMsg {
    int32 term = 1;
    string command = 2;
    string key = 3;
    string value = 4;
}

// RequestVote RPC
message VoteRequest {
    int32 term = 1;
    AddressMsg candidate_id = 2; // Node requesting vote
    int32 last_log_index = 3;
    int32 last_log_term = 4;
    AddressMsg to_node_id = 5; // Node receiving request (for logging/debugging)
}

message VoteResponse {
    int32 term = 1;
    bool vote_granted = 2;
    AddressMsg from_node_id = 3; // Node sending response
}

// AppendEntries RPC
message AppendEntriesRequest {
    int32 term = 1;
    AddressMsg leader_id = 2;
    int32 prev_log_index = 3;
    int32 prev_log_term = 4;
    repeated LogEntryMsg entries = 5;
    int32 leader_commit = 6;
    AddressMsg to_node_id = 7; // Node receiving request
}

message AppendEntriesResponse {
    int32 term = 1;
    bool success = 2;
    AddressMsg from_node_id = 3; // Node sending response
}

service RaftService {
    rpc RequestVote (VoteRequest) returns (VoteResponse) {}
    rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse) {}
}